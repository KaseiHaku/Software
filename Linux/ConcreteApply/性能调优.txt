################################ 系统级：内核参数调优 ################################       
shell> ss -tan | grep TIME-WAIT         # TCP 连接断开后，会以 TIME-WAIT 的状态保留一定时间，然后才会释放端口。
                                        # TIME-WAIT 数量过多影响新的 连接 创建，需要调整内核参数，更迅速的释放调连接

shell> sysctl -a | grep fs.file-nr          # 查看当前系统的文件描述符的状态
fs.file-nr = 4672       0       3227745     # 分别代表： 全局已经分配的文件描述符数量；  自由的文件描述符（待重新分配的）; 总的文件描述符的数量

shell> vim /etc/sysctl.conf  
fs.file-max= 1111111111                     # 系统级最大文件打开数量         

net.ipv4.tcp_fin_timeout= 15                # 系统 ipv4 tcp 超时时间
net.ipv4.tcp_tw_recycle= 1                  # 1=开启快速回收 TCP 连接中状态为 TIME-WAIT 的 socket；0=关闭；  
net.ipv4.tcp_tw_reuse= 1                    # 1=允许将 TIME-WAIT 状态的 socket 重新用于新的 TCP 连接；0=不允许；
net.ipv4.tcp_syncookies= 1                  # 1=当出现 SYN 等待队列溢出时，启用cookies来处理，可防范少量SYN攻击；0=关闭；
net.ipv4.tcp_keepalive_time= 60             # 当 keepalive 启用时，TCP 发送 keepalive 消息的频度，单位秒 60 = 1 分钟
net.ipv4.tcp_max_syn_backlog= 8192          # SYN 队列的长度，越大，可容纳更多 等待连接 的 网络连接数
net.ipv4.tcp_max_tw_buckets= 5000           # 表示状态为 TIME-WAIT 的 socket 的最大数量
net.ipv4.tcp_max_syn_backlog= 65535         # 尚未收到客户端确认信息的连接请求的最大值
net.ipv4.tcp_fastopen= 3                    # 开启 tcp fastopen
net.ipv4.ip_local_port_range= 1024 65535    # 指定当前服务器中，可用于和外部建立连接的 端口的范围
net.ipv4.tcp_max_orphans= 3276800           #  系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上，一般不能减小
net.ipv4.tcp_timestamps= 0                  # 0=关掉时间戳可以避免序列号的卷绕，如果使用了NAT的功能，只能为0！
net.ipv4.tcp_wmem= 8192 436600 873200       # TCP写buffer
net.ipv4.tcp_rmem = 32768 436600 873200     # TCP读buffer
net.ipv4.tcp_mem= 94500000 91500000 92700000    # <TCP内存没有压力  <进入内存压力阶段  >TCP拒绝分配socket; 上述内存单位是页，而不是字节
net.ipv4.tcp_synack_retries = 3             # 重试次数
net.ipv4.tcp_syn_retries = 3                # 重试次数
net.ipv4.tcp_window_scaling = 1             # 该参数为 0 时，TCP 滑动窗口最大值为 (2^16)64KB；将其值设置为 1 时，滑动窗口的最大值可达 (2^30)1GB


net.core.wmem_default= 8388608
net.core.rmem_default= 8388608
net.core.rmem_max= 16777216                 # 最大socket读buffer,可参考的优化值:873200
net.core.wmem_max= 16777216                 # 最大socket写buffer,可参考的优化值:873200
net.core.netdev_max_backlog= 32768          # 每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目
net.core.somaxconn= 262144                  # 表示 LISTEN 状态的 socket 的 backlog 的最大值，即: 最大连接数 


shell> sysctl net.ipv4.tcp_available_congestion_control     # 查看本机提供的 TCP 拥塞算法


################################ 进程级：限制调优 ################################  
shell> ulimit -a        # 查看当前所有进程级限制
shell> vim /etc/security/limits.conf 
root    soft nofile 65535
root    hard nofile 65535
*       soft nofile 65535
*       hard nofile 65535


shell> ulimit -n        # 查看单进程最大打开文件数限制，建议 65535

shell> sysctl -a | grep fs.file-max     # linux 系统级最大打开文件数限制  
shell> cat /proc/sys/fs/file-max        # 同上

################################ I/O 模型级：选型调优 ################################  
I/O 选型：
    select      高并发不可用
    poll        高并发不可用
    epoll       高并发可用
    aio         高并发可用

