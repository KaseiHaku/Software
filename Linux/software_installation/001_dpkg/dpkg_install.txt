################################ Compile 软件包编译
# 将 source code 打包成 .deb / .rpm 文件
#     nginx_1.25.3.orig.tar.gz                        源码包的原始压缩包
#     nginx_1.25.3-1~bookworm.debian.tar.xz           Debian 包装器（debian/ 目录，包含了构建软件包所需的控制文件和补丁）和 Debian 包装规范来完成的
#                                                     其中 1~bookworm 是 Debian 包装器的版本
#     nginx_1.25.3-1~bookworm.dsc                     Debian 包装器描述文件，用于描述 源码的版本，所需的依赖 等
# 
shell> curl -o nginx_1.25.3.orig.tar.gz  URL
shell> tar -xzf nginx_1.25.3.orig.tar.gz                            # 会解压出一个名为 nginx-1.25.3 的目录


# 使用 make 编译
shell> cd nginx-1.25.3                                                # 进入源码目录
shell> ./configure --add-module=/path/to/nginx-rtmp-module            # 修改编译参数，并生成 Makefile 文件
shell> make
shell> sudo make install
shell> make clean

# 使用 dpkg-buildpackage 编译
shell> curl -o nginx_1.25.3-1~bookworm.debian.tar.xz  URL
shell> curl -o nginx_1.25.3-1~bookworm.dsc URL
# 准备 源码+包装器 目录
#shell> tar -xJf nginx_1.25.3-1~bookworm.debian.tar.xz               # 会解压出一个名为 debian 的目录
#shell> cp -r ./debian ./nginx-1.25.3 && rm -rf debian               # 将 debian 目录复制到 源码目录中，因为 dpkg-buildpackage 默认会在当前路径下寻找 debian 目录
shell> dpkg-source -x nginx_1.25.3-1~bookworm.dsc                    # 以上两步，可以由该条命令直接完成
# 正式开始编译
shell> cd nginx-1.25.3                                               # 进入源码目录
shell> dpkg-buildpackage -b -uc -us                                  # -uc -us 表示跳过 GPG 签名
shell> cd .. && ls -ald *.deb                                        # 一旦构建完成，你会在上一级目录中找到生成的 .deb 文件 

################################ Install 软件包安装
    shell> dpkg -i                                              # 安装 .deb 方式打包的软件
    
################################ Query 软件包查询
    shell> dpkg -l                                              # 列出所有已安装的软件包
    shell> dpkg -L package                                      # 列出一个包安装的所有文件清单
    shell> dpkg -S file                                         # 查看系统中的某个文件属于哪个软件包
    shell> dpkg -c                                              # 查询 deb 包文件中所包含的文件

################################ Remove 软件包删除、卸载、
    shell> dpkg -r                                              # 卸载 .deb 包安装的软件
    shell> dpkg -P                                              # 彻底的卸载，包括软件的配置文件
    shell> dpkg --force-all --purge packagename                 # 有些软件很难卸载，而且还阻止了别的软件的应用，就能够用该命令.

    
################################ Update 软件包更新



################################ Clean 软件包清理、缓存备份等


