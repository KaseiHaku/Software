{
  "log": {"loglevel": "debug"},
  "inbounds": [
    {
      "tag": "reverseIn",
      "protocol": "socks",
      "port": 12345,
      "listen": "127.0.0.1",
      "settings": { "auth": "noauth" },
      /** 当代理 qq 流量时，因为 qq 不会像 Browser 一样能识别 socks 代理，并将 Domain 放入到代理中，所以需要开启流量嗅探，
       * 嗅探并识别流量中的 Domain ，以方便使用 v2ray 使用 路由规则 和 内置的 DNS 服务器 
       * */
      "sniffing": { "enabled": true, "destOverride": ["http", "tls"] }
    }
  ],
  "outbounds": [    
    /** todo 反向代理出口 **/
    {
      "tag": "reverseOut",
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": "www.1291114093.ml",
            "port": 443,
            "users": [
              {"id":"d45499fa-6c4b-3e55-adbb-bd50bc4137b8","security":"chacha20-poly1305","alterId": 4,"level": 0}
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/v2ray/reverse/ws/home",
          "headers": {
            "Host": "1291114093.ml"
          } 
        },
        "security": "tls",  // 在 nginx 上配置
        "tlsSettings": {
          "serverName": "1291114093.ml",
          "alpn": ["http/1.1"],
          "allowInsecure": ture,    // 当值为 true 时，V2Ray 不会检查远端主机所提供的 TLS 证书的有效性。
          "allowInsecureCiphers": false, // 默认情况下 TLS 只使用 TLS 1.3 推荐的加密算法套件，开启这一选项会增加一些与 TLS 1.2 兼容的加密套件。
          "disableSystemRoot": false, // 是否禁用操作系统自带的 CA 证书。默认值为 false
          "certificates": [
            {
              "usage": "verify",
              "certificateFile": "F:/V2Ray/v2ray-windows-64/rooca.crt"
            }
          ]
        }
      }
    },    
    /** todo 直连出口 */
    {
      "tag": "freedomOut",
      "protocol": "freedom"
    }
  ],
  "routing": {
    // IPIfNonMatch 使用域名没有匹配到任何路由规则时，使用 v2ray 内置的 DNS 把域名解析为 IP,再次匹配路由规则
    "domainStrategy": "IPIfNonMatch",  
    "rules": [
      /** todo 反向代理流量，过 VPS 从公司虚拟机出
       * @trap DNS 请求直接发送到服务器解析；即 domainStrategy 必须为 AsIs 或者 IPonDemand 其中之一，
       * */
      {
        "type": "field",
        "inboundTag":["reverseIn"],
        "outboundTag":"reverseOut"
      },
      /** 默认任何流量，走直连通道 */
      {
        "type": "field",
        "outboundTag": "freedomOut"
      }
    ]
  }
}



