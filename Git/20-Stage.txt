查 {
    shell> git status      # 查看当前工作区 和 缓存区 的文件状态
    
}


新增 {
    shell> git add .        # 将当前目录(.) 下的所有改动添加到缓存区
}

删 {
    shell> git reset --mixed HEAD       # 使用当前版本库中的 HEAD 指针的指向的版本，重置缓存区
    shell> git reset --mixed HEAD -- ./path     # 重置缓存区指定文件的内容
}

提交缓存区中的修改到本地库 {
    shell> git commit . -m 'comment'            # 提交 缓存区 内容到 本地仓库，并输入 -m 为本次提交的 说明
    shell> git commit -- .                      # 不解析所有参数 
    shell> git commit . -i                      # 提交一个没有保存的内容之前，先保存命令行路径中的内容
    shell> git commit . -a                      # 提交所有已经被跟踪的文件的修改或删除，但是对未跟踪的文件无效
    shell> git commit --reedit-message=<commit>     # 重新编辑一个提交的注释信息
    shell> git commit --amend                       # 替换上一次 commit
    shell> git commit --patch                       # 交互模式提交
}



